{"version":3,"sources":["pages/EmployeeData.js","pages/Employee.js","App.js","index.js"],"names":["EmployeeData","props","data","columns","label","field","sort","width","rows","employees","console","log","sorting","striped","bordered","Employee","state","employeeRecords","componentDidMount","axios","get","then","records","empdata","results","employeeRecordstemp","i","length","erecord","name","first","last","email","image","picture","medium","phone","cell","dob","date","push","setState","this","React","Component","App","className","ReactDOM","render","document","getElementById"],"mappings":"4RA2CeA,EAxCM,SAACC,GAClB,IAAMC,EAAO,CACTC,QAAS,CACL,CACIC,MAAO,OACPC,MAAO,OACPC,KAAM,MACNC,MAAO,KAEX,CACIH,MAAO,QACPC,MAAO,QACPC,KAAM,MACNC,MAAO,KAEX,CACIH,MAAO,QACPC,MAAO,QACPC,KAAM,MACNC,MAAO,KAEX,CACIH,MAAO,QACPC,MAAO,QACPC,KAAM,MACNC,MAAO,KAEX,CACIH,MAAO,MACPC,MAAO,MACPC,KAAM,MACNC,MAAO,MAGfC,KAAMP,EAAMQ,WAGhB,OADAC,QAAQC,IAAI,QAASV,GACd,kBAAC,IAAD,CAAcW,SAAS,EAAMC,SAAO,EAACC,UAAQ,EAACZ,KAAMA,KCChDa,E,4MAnCXC,MAAQ,CACJC,gBAAiB,I,EAErBC,kBAAoB,WAChBC,IACKC,IAAI,iDACJC,MAAK,SAACC,GACH,IAAIC,EAAUD,EAAQpB,KAAKsB,QACvBC,EAAsB,GAC1Bf,QAAQC,IAAIY,GACZ,IAAK,IAAIG,EAAI,EAAGA,EAAIH,EAAQI,OAAQD,IAAK,CACrC,IAAIE,EAAU,CACVC,KAAMN,EAAQG,GAAGG,KAAKC,MAAQ,IAAMP,EAAQG,GAAGG,KAAKE,KACpDC,MAAOT,EAAQG,GAAGM,MAClBC,MAAOV,EAAQG,GAAGQ,QAAQC,OAC1BC,MAAOb,EAAQG,GAAGW,KAClBC,IAAKf,EAAQG,GAAGY,IAAIC,MAExBd,EAAoBe,KAAKZ,GAE7BlB,QAAQC,IAAIc,GACZ,EAAKgB,SAAS,CAAExB,gBAAiBQ,Q,uDAKzC,OACI,6BACI,gDACA,kBAAC,EAAD,CAAchB,UAAWiC,KAAK1B,MAAMC,uB,GA9B7B0B,IAAMC,W,MCYdC,MAXf,WACI,OACI,yBAAKC,UAAU,OACX,4BAAQA,UAAU,YAAlB,mBAGA,kBAAC,EAAD,Q,kBCFZC,IAASC,OAEL,kBAAC,EAAD,MAEAC,SAASC,eAAe,W","file":"static/js/main.197b57de.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { MDBDataTable } from \"mdbreact\";\r\n\r\nconst EmployeeData = (props) => {\r\n    const data = {\r\n        columns: [\r\n            {\r\n                label: \"Name\",\r\n                field: \"name\",\r\n                sort: \"asc\",\r\n                width: 500,\r\n            },\r\n            {\r\n                label: \"Email\",\r\n                field: \"email\",\r\n                sort: \"asc\",\r\n                width: 500,\r\n            },\r\n            {\r\n                label: \"Image\",\r\n                field: \"image\",\r\n                sort: \"asc\",\r\n                width: 500,\r\n            },\r\n            {\r\n                label: \"Phone\",\r\n                field: \"phone\",\r\n                sort: \"asc\",\r\n                width: 300,\r\n            },\r\n            {\r\n                label: \"DOB\",\r\n                field: \"dob\",\r\n                sort: \"asc\",\r\n                width: 250,\r\n            }\r\n        ],\r\n        rows: props.employees\r\n    };\r\n    console.log(\"Props\", props);\r\n    return <MDBDataTable sorting={true} striped bordered data={data} />;\r\n};\r\n\r\nexport default EmployeeData;","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport EmployeeData from \"./EmployeeData\";\r\n\r\n\r\nclass Employee extends React.Component {\r\n    state = {\r\n        employeeRecords: [],\r\n    };\r\n    componentDidMount = () => {\r\n        axios\r\n            .get(\"https://randomuser.me/api/?results=500&nat=us\")\r\n            .then((records) => {\r\n                let empdata = records.data.results;\r\n                let employeeRecordstemp = [];\r\n                console.log(empdata)\r\n                for (let i = 0; i < empdata.length; i++) {\r\n                    let erecord = {\r\n                        name: empdata[i].name.first + \" \" + empdata[i].name.last,\r\n                        email: empdata[i].email,\r\n                        image: empdata[i].picture.medium,\r\n                        phone: empdata[i].cell,\r\n                        dob: empdata[i].dob.date,\r\n                    };\r\n                    employeeRecordstemp.push(erecord);\r\n                }\r\n                console.log(employeeRecordstemp);\r\n                this.setState({ employeeRecords: employeeRecordstemp });\r\n            });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>Employee Details</h2>\r\n                <EmployeeData employees={this.state.employeeRecords} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Employee;\r\n","\r\nimport React from \"react\";\r\nimport Employee from \"./pages/Employee\";\r\n// import \"./App.css\";\r\nimport \"./index.css\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className=\"App\">\r\n            <header className=\"jumotron\">\r\n                Staff Directory\r\n      </header>\r\n            <Employee />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;","\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\nimport \"mdbreact/dist/css/mdb.css\";\n\n\nReactDOM.render(\n    // <React.StrictMode>\n    <App />,\n    // </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA"],"sourceRoot":""}